# Generated by Django 4.1.3 on 2022-12-17 12:03

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customermanagement', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Backlog_allocation_Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Developer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('developer_name', models.CharField(max_length=200)),
                ('email', models.CharField(max_length=200)),
                ('telephone', models.CharField(max_length=200)),
                ('registration_date', models.DateTimeField(default=datetime.datetime(2022, 12, 17, 15, 3, 13, 740214), verbose_name='registration date')),
            ],
        ),
        migrations.CreateModel(
            name='Developer_Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('developer_status', models.CharField(max_length=200)),
                ('created_on', models.DateTimeField(default=datetime.datetime(2022, 12, 17, 15, 3, 13, 738216), verbose_name='date created')),
            ],
        ),
        migrations.CreateModel(
            name='Project_Phase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_phase', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Review_Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Sprint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(default=datetime.datetime(2022, 12, 17, 15, 3, 13, 747214), verbose_name='start date')),
                ('end_date', models.DateTimeField(default=datetime.datetime(2022, 12, 17, 15, 3, 13, 748216), verbose_name='end date')),
                ('sprint_title', models.CharField(max_length=200, null=True)),
                ('expected_outcome', models.TextField()),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='developer_sprints', to='developer.developer')),
            ],
        ),
        migrations.CreateModel(
            name='Sprint_Backlog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('backlog_item', models.TextField()),
                ('creation_date', models.DateTimeField(default=datetime.datetime(2022, 12, 17, 15, 3, 13, 750215), verbose_name='creation date')),
                ('expected_outcome', models.TextField()),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='developer_sprint_backlogs', to='developer.developer')),
                ('sprint', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sprint_backlogs', to='developer.sprint')),
            ],
        ),
        migrations.CreateModel(
            name='Sprint_Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review', models.TextField()),
                ('creation_date', models.DateTimeField(default=datetime.datetime(2022, 12, 17, 15, 3, 13, 758213), verbose_name='creation date')),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='developer_sprint_reviews', to='developer.developer')),
                ('review_status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='developer.review_status')),
                ('sprint', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sprint_reviews', to='developer.sprint')),
            ],
        ),
        migrations.CreateModel(
            name='Sprint_Retrospective',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('retrospective', models.TextField()),
                ('creation_date', models.DateTimeField(default=datetime.datetime(2022, 12, 17, 15, 3, 13, 760215), verbose_name='creation date')),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='developer_sprint_retrospectives', to='developer.developer')),
                ('sprint', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sprint_retrospectives', to='developer.sprint')),
            ],
        ),
        migrations.CreateModel(
            name='Sprint_Backlog_Allocations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(default=datetime.datetime(2022, 12, 17, 15, 3, 13, 753215), verbose_name='creation date')),
                ('allocation_status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='developer.backlog_allocation_status')),
                ('developer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='developer_sprint_backlog_allocations', to='developer.developer')),
                ('sprint_backlog', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sprint_backlog_allocations', to='developer.sprint_backlog')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=200)),
                ('start_date', models.DateTimeField(default=datetime.datetime(2022, 12, 17, 15, 3, 13, 743214), verbose_name='starting date')),
                ('deadline', models.DateTimeField(default=datetime.datetime(2022, 12, 17, 15, 3, 13, 743214), verbose_name='deadline')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_projects', to='customermanagement.customer_product')),
                ('project_phase', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='project_phase_projects', to='developer.project_phase')),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=200)),
                ('feedback', models.TextField()),
                ('date_received', models.DateTimeField(default=datetime.datetime(2022, 12, 17, 15, 3, 13, 745214), verbose_name='date received')),
                ('comments', models.TextField(null=True)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='developer_feedbacks', to='developer.developer')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_feedbacks', to='customermanagement.customer_product')),
            ],
        ),
        migrations.AddField(
            model_name='developer',
            name='developer_status',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='developer.developer_status'),
        ),
        migrations.AddField(
            model_name='developer',
            name='role',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='developer.role'),
        ),
        migrations.AddField(
            model_name='developer',
            name='user_details',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='developer_user_details', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Daily_Scrum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=datetime.datetime(2022, 12, 17, 15, 3, 13, 755215), verbose_name='date')),
                ('outcome', models.TextField()),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='developer_daily_scrums', to='developer.developer')),
                ('sprint', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sprint_daily_scrums', to='developer.sprint')),
            ],
        ),
    ]
