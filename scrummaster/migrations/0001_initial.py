# Generated by Django 4.1.2 on 2022-11-11 15:58

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customermanagement', '0001_initial'),
        ('developer', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact_Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('email', models.CharField(max_length=200)),
                ('telephone', models.CharField(max_length=200)),
                ('address', models.CharField(max_length=200)),
                ('registration_date', models.DateTimeField(verbose_name='registration date')),
            ],
        ),
        migrations.CreateModel(
            name='Contact_Person_Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=200)),
                ('created_on', models.DateTimeField(verbose_name='date created')),
            ],
        ),
        migrations.CreateModel(
            name='Development_Rule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rule', models.CharField(max_length=200)),
                ('justification', models.TextField()),
                ('creation_date', models.DateTimeField(verbose_name='creation date')),
            ],
        ),
        migrations.CreateModel(
            name='Development_Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Development_Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_name', models.CharField(max_length=200)),
                ('creation_date', models.DateTimeField(verbose_name='creation date')),
            ],
        ),
        migrations.CreateModel(
            name='Development_Team_Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=200)),
                ('feedback', models.TextField()),
                ('date_received', models.DateTimeField(verbose_name='date received')),
                ('comments', models.TextField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customermanagement.customer_product')),
            ],
        ),
        migrations.CreateModel(
            name='Feedback_Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Plan_Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Priority',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Product_Release',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('release_definition', models.TextField()),
                ('release_date', models.DateTimeField(verbose_name='release date')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=200)),
                ('start_date', models.DateTimeField(verbose_name='starting date')),
                ('deadline', models.DateTimeField(verbose_name='deadline')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customermanagement.customer_product')),
            ],
        ),
        migrations.CreateModel(
            name='Project_Manager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(verbose_name='creation date')),
                ('project_manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='developer.developer')),
            ],
        ),
        migrations.CreateModel(
            name='Project_Phase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_phase', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Project_Plan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan', models.TextField()),
                ('deliverable', models.TextField()),
                ('deadline', models.DateTimeField(verbose_name='deadline')),
                ('creation_date', models.DateTimeField(verbose_name='creation date')),
                ('plan_manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scrummaster.project_manager')),
                ('plan_priority', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scrummaster.priority')),
                ('plan_status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scrummaster.plan_status')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scrummaster.project')),
            ],
        ),
        migrations.CreateModel(
            name='Release_Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Risk_Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Team_Member_Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Team_Member_Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Team_Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(verbose_name='creation date')),
                ('start_date', models.DateTimeField(verbose_name='start date')),
                ('end_date', models.DateTimeField(verbose_name='end date')),
                ('developer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='developer.developer')),
                ('member_role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scrummaster.team_member_role')),
                ('member_status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scrummaster.team_member_status')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scrummaster.development_team')),
            ],
        ),
        migrations.CreateModel(
            name='Release_Strategy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strategy', models.TextField()),
                ('creation_date', models.DateTimeField(verbose_name='creation date')),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scrummaster.project_manager')),
            ],
        ),
        migrations.CreateModel(
            name='Release_Feature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature', models.TextField()),
                ('release_date', models.DateTimeField(verbose_name='feature release date')),
                ('priority', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scrummaster.priority')),
                ('release', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scrummaster.product_release')),
            ],
        ),
        migrations.CreateModel(
            name='Release_Backlog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('backlog', models.TextField()),
                ('creation_date', models.DateTimeField(verbose_name='creation date')),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scrummaster.project_manager')),
            ],
        ),
        migrations.CreateModel(
            name='Project_Plan_Risk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('risk', models.TextField()),
                ('creation_date', models.DateTimeField(verbose_name='creation date')),
                ('project_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scrummaster.project_plan')),
                ('risk_manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scrummaster.project_manager')),
                ('risk_priority', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scrummaster.priority')),
                ('risk_status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scrummaster.risk_status')),
            ],
        ),
        migrations.CreateModel(
            name='Project_Development',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('required_skills', models.TextField()),
                ('deadline', models.DateTimeField(verbose_name='deadline')),
                ('creation_date', models.DateTimeField(verbose_name='creation date')),
                ('development_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scrummaster.project_plan')),
                ('development_status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scrummaster.plan_status')),
                ('scrum_master', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='developer.developer')),
            ],
        ),
        migrations.AddField(
            model_name='project',
            name='project_manager',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scrummaster.project_manager'),
        ),
        migrations.AddField(
            model_name='project',
            name='project_phase',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scrummaster.project_phase'),
        ),
        migrations.AddField(
            model_name='product_release',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scrummaster.project'),
        ),
        migrations.AddField(
            model_name='product_release',
            name='release_backlog',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scrummaster.release_backlog'),
        ),
        migrations.AddField(
            model_name='product_release',
            name='release_status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scrummaster.release_status'),
        ),
        migrations.AddField(
            model_name='product_release',
            name='release_strategy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scrummaster.release_strategy'),
        ),
        migrations.CreateModel(
            name='Feedback_Recepient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scrummaster.feedback')),
                ('recepient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='developer.developer')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scrummaster.feedback_status')),
            ],
        ),
        migrations.AddField(
            model_name='development_team',
            name='project_development',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scrummaster.project_development'),
        ),
        migrations.AddField(
            model_name='development_team',
            name='team_status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scrummaster.development_team_status'),
        ),
        migrations.CreateModel(
            name='Development_Rule_Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback', models.TextField()),
                ('creation_date', models.DateTimeField(verbose_name='creation date')),
                ('developer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='developer.developer')),
                ('rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scrummaster.development_rule')),
            ],
        ),
        migrations.AddField(
            model_name='development_rule',
            name='made_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scrummaster.project_manager'),
        ),
        migrations.AddField(
            model_name='development_rule',
            name='project_development',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scrummaster.project_development'),
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_date', models.DateTimeField(verbose_name='registration date')),
                ('contact_person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scrummaster.contact_person')),
                ('customer_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customermanagement.customer_profile')),
            ],
        ),
        migrations.AddField(
            model_name='contact_person',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scrummaster.contact_person_status'),
        ),
    ]
